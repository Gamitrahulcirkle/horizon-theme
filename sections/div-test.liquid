<style>
  .bundle-container {
    max-width: 1000px;
    margin: 40px auto;
    padding: 24px;
    border: 1px solid #e0e0e0;
    border-radius: 12px;
    font-family: sans-serif;
    background-color: #fff;
  }

  .bundle-title {
    font-size: 24px;
    margin-bottom: 20px;
    font-weight: 600;
  }

  .bundle-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 24px;
  }

  .bundle-main {
    flex: 1 1 300px;
    display: flex;
    gap: 16px;
    align-items: center;
    border: 1px solid #ddd;
    padding: 12px;
    border-radius: 8px;
  }

  .bundle-image {
    width: 100px;
    height: 100px;
    object-fit: cover;
    border-radius: 6px;
  }

  .bundle-details h3 {
    margin: 0 0 6px;
    font-size: 18px;
  }

  .bundle-details .price {
    color: #777;
    font-size: 16px;
  }

  .bundle-options {
    flex: 2 1 400px;
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  .bundle-item {
    display: flex;
    align-items: center;
    gap: 12px;
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 10px;
    transition: background 0.3s;
  }

  .bundle-item input[type="checkbox"] {
    transform: scale(1.3);
    margin-right: 10px;
    cursor: pointer;
  }

  .bundle-item label {
    display: flex;
    align-items: center;
    gap: 12px;
    cursor: pointer;
    width: 100%;
  }

  .bundle-item img {
    width: 70px;
    height: 70px;
    object-fit: cover;
    border-radius: 6px;
  }

  .bundle-item h4 {
    margin: 0 0 4px;
    font-size: 16px;
  }

  .bundle-item p {
    margin: 0;
    font-size: 14px;
    color: #666;
  }

  .bundle-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 30px;
    flex-wrap: wrap;
    gap: 16px;
  }

  .bundle-total {
    font-size: 20px;
    font-weight: 500;
    display: flex;
    align-items: stretch;
  }

  #bundle-total {
    font-weight: 700;
    margin-left: 8px;
    color: #000;
  }

  .bundle-button {
    padding: 12px 24px;
    background-color: #000;
    color: white;
    border: none;
    border-radius: 6px;
    font-size: 16px;
    cursor: pointer;
    transition: background 0.3s;
  }

  .bundle-button:hover {
    background-color: #333;
  }

  @media (max-width: 768px) {
    .bundle-grid {
      flex-direction: column;
    }
    .bundle-footer {
      flex-direction: column;
      align-items: flex-start;
    }
  }
</style>

<section class="bundle-section" section-name="dev-test">
  <div id="bundle-products" class="bundle-container">
    <h2 class="bundle-title">Bundle & Save</h2>
    <div class="bundle-grid">
      <!-- Main Product -->
      <div class="bundle-main">
        {% if product.featured_image != blank %}
          {{ product.featured_image | image_url: width:product.featured_image.width | image_tag: class:"bundle-image" }}
        {% endif %}
        <div class="bundle-details">
          <h3>{{ product.title }}</h3>
          <p class="price">{{ product.price | money_with_currency }}</p>
        </div>
      </div>
      <!-- Bundle Options -->

      {% if section.settings.product_list != blank %}
        <div class="bundle-options">
        {% for product in section.settings.product_list %}
          <div class="bundle-item">
            <input type="checkbox" class="bundle-checkbox" data-variant_id="{{ product.first_available_variant.id }}" data-price="{{ product.price | money_without_currency }}" id="bundle{{ forloop.index }}" {% if forloop.first %}checked{% endif %}>
            <label for="bundle{{ forloop.index }}">
              {% if product.featured_image != blank %}
                {{ product.featured_image | image_url: width:product.featured_image.width | image_tag }}
               {% endif %}
               <div>
                <h4>{{ product.title }}</h4>
                <p>{{ product.price | money_with_currency }}</p>
              </div>
             </label>
           </div>
        {% endfor %}
      </div>
    {% endif %}    
  </div>

  <!-- Total & Button -->
  <div class="bundle-footer">
    <div class="bundle-total">
      <p>Total:</p>
      <span id="bundle-total">{{ product.price | money_with_currency }}</span>
    </div>
    <button class="bundle-button" id="bundle_add_to_cart">Add Bundle to Cart</button>
  </div>
</div>

</section>


<script>
  document.addEventListener("DOMContentLoaded", () => {
    const checkboxes = document.querySelectorAll(".bundle-checkbox");
    const totalDisplay = document.getElementById("bundle-total");
    const basePrice = {{ product.price | money_without_currency }};
    const symbol = '{{ cart.currency.symbol }}';

    function updateTotal() {
      let total = basePrice;
      checkboxes.forEach(checkbox => {
        if (checkbox.checked) {
          total += parseFloat(checkbox.dataset.price);
        }
      });
      totalDisplay.textContent = symbol + total.toFixed(2);
    }

    checkboxes.forEach(cb => cb.addEventListener("change", updateTotal));
    updateTotal();

    document.querySelector('#bundle_add_to_cart').addEventListener("click", function () {
      const items = Array.from(checkboxes)
      .filter(cb => cb.checked)
      .map(cb => ({
        id: cb.dataset.variant_id,
        quantity: 1
      }));

      // Always include main product
      items.unshift({
        id: {{ product.selected_or_first_available_variant.id }},
        quantity: 1
      });

      if (!items.length) {
        alert("Please select at least one product for the bundle.");
        return;
      }

      fetch('/cart/add.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify({ items })
      })
      .then(res => res.json())
      .then(data => {
        import('@theme/events').then(({ CartUpdateEvent }) => {
          const cartDrawer = document.querySelector('cart-drawer-component');
          fetch('/cart.js')
          .then(res => res.json())
          .then(cart => {
            const event = new CartUpdateEvent(cart, 'manual-trigger', {
              itemCount: cart.item_count,
              source: 'fad-refresh',
              sections: {}
            });
            document.dispatchEvent(event);
            setTimeout(function(){ cartDrawer.open() }, 500);
          });
        });
      })
      .catch(err => console.error('Bundle add error:', err));
    });
  });

</script>

{% schema %}
  {
    "name": "Testing section",
    "settings": [
      {
        "type": "text",
        "id": "text",
        "label": "Text",
        "default":"Testing Bundle product section"
      },
      {
        "type": "product_list",
        "id": "product_list",
        "label": "Product List"
      }
    ],
    "presets": [
      {
        "name": "Testing Section"
      }
    ]
  }
{% endschema %}